https://github.com/joydip-git/siemens-angular-15thMay2023

Roadmap:
	a. JS basics and advanced
	b. JS new features
	c. web developmet using HTML, CSS, JS
	d. modular application
	e. Node JS
	f. Angular with Typescript

JS engine:
	chrome: V8
	edge: chromekit (v8)
	safari: JS Core
	firefox: Spidermonkey

Node JS: server side framework bulit at the top of V8 engine
2009 by Ryan Dahl

CSS:
	a. inline styling
	b. outline styling

JS:
	data types: 
		number, string, boolean,  object, function, NaN, undefined, null, Infinity

transpilation: conversion of TS to JS or new version of JS to older version of JS
transpiler tools:
	JS => JS: babel 
	TS => JS: typescript

NPM: Node Package Manager

package.json file:
>npm init
>npm init --yes

npm i typescript -D (development dependency)
npm i typescript (complete dependency)

older:
npm i typescript --save-dev (development dependency)
npm i typescript --save (complete dependency)

TSC:
command to create tsconfig.json file 
>.\node_modules\.bin\tsc --init (local)
>tsc --init (global)

module: one js/ts file, its an API

module formats:

a. common js format (default format for modular coding in Node JS)
exporting: module.exports={prop1:val1}
importing: var x = require('./....')

b. ES6 (2015) module format:
exporting: export member
importing: import {member} from './...'

c. AMD (asynchronous module definition)
require([],function(){
})

d. UMD (Universal module definition)

module loader:
a. common js module loader
b. requirejs module loader (understands ONLY AMD format)


